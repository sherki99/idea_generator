import json
from typing import Dict, Any, List
import os
from dotenv import load_dotenv
from langchain_openai import AzureChatOpenAI
from graph.state import (
    BusinessIdeaGenerationState,
    BusinessModelValidationOutput,
)
from langchain import hub
from langchain.agents import create_openai_functions_agent, AgentExecutor
from tools.content_extraction_tool import create_content_extraction_tool
from tools.serper_search_tool import create_websearch_tool


load_dotenv(override=True)

llm = AzureChatOpenAI(
    azure_endpoint=os.getenv("AZURE_API_BASE"),
    api_key=os.getenv("AZURE_API_KEY"),
    api_version=os.getenv("AZURE_API_VERSION"),
    azure_deployment=os.getenv("LLM_DEPLOYMENT_NAME")
)


def business_model_validation_agent(state: BusinessIdeaGenerationState) -> Dict[str, Any]:
    """
    Validates business ideas generated by the business model generator.
    Checks feasibility, novelty, market demand, and competitors.
    """

    print("üîç Starting Business Model Validation...")

    try:
        ideas = state.research_output.business_model_generator.ideas \
            if state.research_output.business_model_generator else []
        
        first_idea =  ideas[0]

        if not ideas:
            print("‚ö†Ô∏è No business ideas to validate.")
            return {
                "current_step": "business_model_validation_skipped",
                "errors": state.errors + ["No business ideas to validate"]
            }
        
        tools =  [create_websearch_tool(), create_content_extraction_tool()]

        prompt = hub.pull("hwchase17/openai-functions-agent")
        agent =  create_openai_functions_agent(llm, tools, prompt)
        agent_executor =  AgentExecutor(agent=agent, tools=tools, verbose=True, return_intermediate_steps=True)

        search_input = {
            "input": f"""
            You are tasked with validating the following business idea:

            Idea: {first_idea.idea_name}
            Description: {first_idea.description}

            Your responsibilities:
            1. Identify all possible competitors for this idea, including direct and indirect competitors.
            2. For each competitor, provide:
                - Name
                - Product/service description
                - Strengths (pros)
                - Weaknesses (cons) compared to the idea above
            3. Scrape reviews (if available) from each competitor's platform:
                - Collect 20 negative reviews and 5 positive reviews per competitor
                - Extract key pain points and user dissatisfaction
            4. Analyze the gaps between the competitors and the idea:
                - Highlight where this idea can provide more value
                - Suggest minor pivots or improvements based on competitor weaknesses and pain points
            5. Summarize findings in structured JSON with:
                - competitor_list
                - pros_cons_comparison
                - review_insights
                - suggested_improvements
                - feasibility_score (0-10)
                - revenue potential
            6. Only focus on evidence-backed insights (web research, reviews, market signals).
            """
        }

        result_search_input = agent_executor.invoke(search_input)

        # I migh split into two part and some thign more deep and with more custom tools
        # for knwo what I need is after doen the reas re do other call with detail 
        # othe llm.invoke "where it based on result_search_input" and idea,  i can valdiate based on the idea as aung if poentila market, of course evry idea or evry is alread exisitng
        # it metter just how I apporahc, btu sicne they are servuce thatmaig can cost a lot or have mess thte has soem meny thign htta can aonly big ocmpamy afford sysme or for a otehr reaosn, you neeed ot explau base ont heifnroma coled t preivpsly 
        # hwo i positon my sel fi nmarhe or in case it to saturate whihci really rare, I want to validtae by saying if really bring value to people compare to others hwo since my idea is vase on ai agents complwx workflwo that what is givin more
        # compare to others, or if not even goign nicher cby looking and reive you can come up with new ideas that solve a really niche problme where people are ready to pay 




        second_prompt = f"""
        Based on the competitor research and review analysis below:

        {result_search_input}

        Validate the idea {first_idea.idea_name} against the findings. Provide structured JSON with:
        - validated_idea_name
        - feasibility_score (0-10)
        - revenue potential
        - recommended improvements
        - differentiation points vs competitors
        - summary of key insights and opportunities
        """
        structured_output = llm.with_structured_output(
            BusinessModelValidationOutput,
            method="function_calling"
        ).invoke(second_prompt)

        return {
            "research_output": {
                **(state.research_output.model_dump() if state.research_output else {}),
                "business_model_validation": structured_output
            },
            "current_step": "business_model_validation_complete",
            "tools_used": state.tools_used + ["serper_web_search", "content_extraction_tool", "azure_llm"],
        }

    except Exception as e:
        print(f"‚ùå Business Model Validation failed: {e}")
        return {
            "current_step": "business_model_validation_failed",
            "errors": state.errors + [f"Business Model Validation failed: {str(e)}"]
        }
